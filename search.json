[{"path":"https://beroukhim-lab.github.io/RtangentXY/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://beroukhim-lab.github.io/RtangentXY/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kei Enomoto. Author. Greg Raskind. Author, maintainer. Siyun Lee. Author. Rameen Beroukhim. Copyright holder, funder.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Enomoto K, Raskind G, Lee S (2025). RtangentXY: TangentXY SCNA Signal Normalization. R package version 1.0.0, https://beroukhim-lab.github.io/RtangentXY/.","code":"@Manual{,   title = {RtangentXY: TangentXY SCNA Signal Normalization},   author = {Kei Enomoto and Greg Raskind and Siyun Lee},   year = {2025},   note = {R package version 1.0.0},   url = {https://beroukhim-lab.github.io/RtangentXY/}, }"},{"path":[]},{"path":"https://beroukhim-lab.github.io/RtangentXY/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"TangentXY SCNA Signal Normalization","text":"TangnetXY sex-informed copy number inference algorithm extends Tangent (PMID: 36040167).","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"TangentXY SCNA Signal Normalization","text":"install TangentXY, ’ll need either remotes devtools package.","code":"remotes::install_github(\"beroukhim-lab/RtangentXY\")"},{"path":"https://beroukhim-lab.github.io/RtangentXY/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"TangentXY SCNA Signal Normalization","text":"detailed function documentation, please see https://beroukhim-lab.github.io/RtangentXY/ inputs tangent algorithm follows: Normal sample signal matrix values log2(Relative Copy Number) format Tumor sample signal matrix values log2(Relative Copy Number) format Probe information file Sample information file package comes example datasets demonstrate expected format input.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/index.html","id":"tangent","dir":"","previous_headings":"","what":"Tangent","title":"TangentXY SCNA Signal Normalization","text":"","code":"# Filter out common germline CNVs probes_filt <- filter_blacklist(example_pif) nsig_df <- example_nsig_df %>% filter(locus %in% probes_filt$locus) tsig_df <- example_tsig_df %>% filter(locus %in% probes_filt$locus)  # Diagnostic plot to select number of latent factors plot_latent_factor_importance(   sif_df  = example_sif,   nsig_df = nsig_df,   tsig_df = tsig_df )  # Run tangent n_latent <- 5 tangent_res <- run_tangent(   sif_df   = example_sif,   nsig_df  = nsig_df,   tsig_df  = tsig_df,   n_latent = n_latent )  # Plot signal and noise profiles before and after normalization plot_signal_noise(   tnorm    = tangent_res,   sif_df   = example_sif,   pif_df   = probes_filt,   tsig_df  = tsig_df,   n_latent = n_latent )  # Plot signal profile before and after tangent normalization for a given sample plot_signal_along_loci(   tnorm     = tangent_res,   sample_id = \"tumor.female1\",   pif_df    = probes_filt,   tsig_df   = tsig_df,   n_latent  = n_latent )"},{"path":"https://beroukhim-lab.github.io/RtangentXY/index.html","id":"segmentation","dir":"","previous_headings":"","what":"Segmentation","title":"TangentXY SCNA Signal Normalization","text":"tangent pipeline outputs normalized signal matrix can used input Circular Binary Segmentation (CBS):","code":"# Run CBS cbs <- run_cbs(tangent_res, n_cores = 5)  # Save results to disk save_segmentation(cbs, output_dir = \".\")"},{"path":"https://beroukhim-lab.github.io/RtangentXY/index.html","id":"pseudotangent","dir":"","previous_headings":"","what":"Pseudotangent","title":"TangentXY SCNA Signal Normalization","text":"relatively normal samples available, pseudotangent algorithm may appropriate.","code":"ptangent_res <- run_pseudotangent(   sif_df         = example_sif,   nsig_df        = nsig_df,   tsig_df        = tsig_df,   n_latent_init  = 5,   num_partitions = 3,   n_latent_part  = 3 )"},{"path":"https://beroukhim-lab.github.io/RtangentXY/index.html","id":"support","dir":"","previous_headings":"","what":"Support","title":"TangentXY SCNA Signal Normalization","text":"Please open issue support.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"TangentXY SCNA Signal Normalization","text":"research papers associated RtangentXY: Gao GF, Oh C, Saksena G, Deng D, Westlake LC, Hill BA, Reich M, Schumacher SE, Berger AC, Carter SL, Cherniack AD, Meyerson M, Tabak B, Beroukhim R, Getz G. Tangent normalization somatic copy-number inference cancer genome analysis. Bioinformatics. 2022 Oct 14;38(20):4677-4686. doi: 10.1093/bioinformatics/btac586. PMID: 36040167; PMCID: PMC9563697.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/RtangentXY-package.html","id":null,"dir":"Reference","previous_headings":"","what":"RtangentXY: TangentXY SCNA Signal Normalization — RtangentXY-package","title":"RtangentXY: TangentXY SCNA Signal Normalization — RtangentXY-package","text":"package implementation TangentXY, sex-informed copy number inference algorithm extends Tangent, published 2022 (PMID: 36040167).","code":""},{"path":[]},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/RtangentXY-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"RtangentXY: TangentXY SCNA Signal Normalization — RtangentXY-package","text":"Maintainer: Greg Raskind graskind@umich.edu (ORCID) Authors: Kei Enomoto Kei_Enomoto@dfci.harvard.edu Siyun Lee siyun@broadinstitute.org (ORCID) contributors: Rameen Beroukhim Rameen_Beroukhim@dfci.harvard.edu [copyright holder, funder]","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/arrange_by_genomic_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange a data frame by genomic position based on a locus column — arrange_by_genomic_position","title":"Arrange a data frame by genomic position based on a locus column — arrange_by_genomic_position","text":"Arrange data frame genomic position based locus column","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/arrange_by_genomic_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange a data frame by genomic position based on a locus column — arrange_by_genomic_position","text":"","code":"arrange_by_genomic_position(df)"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/arrange_by_genomic_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange a data frame by genomic position based on a locus column — arrange_by_genomic_position","text":"df tibble data.frame locus column format \"{chr}:{start}-{end}\" {chr} 1-22, X, Y {start} {end} genomic coordinates.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/arrange_by_genomic_position.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrange a data frame by genomic position based on a locus column — arrange_by_genomic_position","text":"Input data frame arranged genomic position","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/calc.signal.noise.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the signal and noise profile of a sample — calc.signal.noise","title":"Calculate the signal and noise profile of a sample — calc.signal.noise","text":"function calculates signal noise profile sample. signal defined standard deviation median signal arm (grouped autosomes, X, Y chromosomes), noise defined median absolute values vector consecutive differences signal.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/calc.signal.noise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the signal and noise profile of a sample — calc.signal.noise","text":"","code":"calc.signal.noise(list, pif)"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/calc.signal.noise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the signal and noise profile of a sample — calc.signal.noise","text":"list numeric vector representing signal values sample pif data frame containing positional information locus, including chromosome","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/convert_cbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts CBS output to signal format — convert_cbs","title":"Converts CBS output to signal format — convert_cbs","text":"Converts output run_cbs format signal files (normal tumor) used elsewhere package. Fills female Y chromosome values NAs.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/convert_cbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts CBS output to signal format — convert_cbs","text":"","code":"convert_cbs(cbs_out, sif_df, tsig_df)"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/convert_cbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts CBS output to signal format — convert_cbs","text":"cbs_out output run_cbs (.e. list outputs segment). sif_df Tibble filepath text file containing sample metadata tsig_df Tibble filepath text file containing tumor signal matrix","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/convert_cbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts CBS output to signal format — convert_cbs","text":"Tumor signal matrix format input tumor signal matrix.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/example_nsig_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Example normal signal matrix file — example_nsig_df","title":"Example normal signal matrix file — example_nsig_df","text":"tibble containing log2 relative copy number values normal samples small test dataset","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/example_nsig_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example normal signal matrix file — example_nsig_df","text":"","code":"example_nsig_df"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/example_nsig_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example normal signal matrix file — example_nsig_df","text":"tibble 4,800 rows 11 columns: locus Locus format \"{chr}:{start}-{end}\" {chr} 1-22, X, Y sample.id One column normal sample containing log2(RCN) values","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/example_pif.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Probe Information File — example_pif","title":"Example Probe Information File — example_pif","text":"tibble containing probe information small test dataset","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/example_pif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Probe Information File — example_pif","text":"","code":"example_pif"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/example_pif.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Probe Information File — example_pif","text":"tibble 5 columns: locus Locus format \"{chr}:{start}-{end}\" {chr} 1-22, X, Y chr Chromosome probe start Start position probe end End position probe arm Arm chromosome (p q)","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/example_sif.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Sample Information File — example_sif","title":"Example Sample Information File — example_sif","text":"tibble containing sample information small test dataset","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/example_sif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Sample Information File — example_sif","text":"","code":"example_sif"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/example_sif.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Sample Information File — example_sif","text":"tibble 4 columns: sample.id Sample ID patient.id Patient ID sex One \"male\" \"female\" type One \"normal\" \"tumor\"","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/example_tsig_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Example tumor signal matrix file — example_tsig_df","title":"Example tumor signal matrix file — example_tsig_df","text":"tibble containing log2 relative copy number values tumor samples small test dataset","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/example_tsig_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example tumor signal matrix file — example_tsig_df","text":"","code":"example_tsig_df"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/example_tsig_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example tumor signal matrix file — example_tsig_df","text":"Analagous example_nsig_df","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/filter_blacklist.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter out common germline copy-number variants — filter_blacklist","title":"Filter out common germline copy-number variants — filter_blacklist","text":"Filter common germline copy-number variants","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/filter_blacklist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter out common germline copy-number variants — filter_blacklist","text":"","code":"filter_blacklist(   probe_info,   blacklist = \"hg38\",   start_col = \"flanking.start\",   end_col = \"flanking.end\" )"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/filter_blacklist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter out common germline copy-number variants — filter_blacklist","text":"probe_info Tibble filepath text file containing probe information. \"locus\" column following form: \"{chr}:{start}-{end}\" {chr} 1-22, X, Y {start} {end} genomic coordinates blacklist default hg38. data probe_info aligned hg19, set parameter \"hg19\". dataframe filepath can also supplied parameter custom filtering. Blacklist chr column chromosome names (1-22, X, Y) columns start end coordinates. start_col name column blacklist file use start coordinate filtering end_col name column blacklist file use end coordinate filtering","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/filter_blacklist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter out common germline copy-number variants — filter_blacklist","text":"Input probe_info dataframe rows overlapping blacklist removed","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/hg19_blacklist.html","id":null,"dir":"Reference","previous_headings":"","what":"Germline Copy Number Variants Blacklist Data Version hg19 — hg19_blacklist","title":"Germline Copy Number Variants Blacklist Data Version hg19 — hg19_blacklist","text":"CNV blacklist, used GISTIC, derived SNP6 array analysis","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/hg19_blacklist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Germline Copy Number Variants Blacklist Data Version hg19 — hg19_blacklist","text":"","code":"hg19_blacklist"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/hg19_blacklist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Germline Copy Number Variants Blacklist Data Version hg19 — hg19_blacklist","text":"data frame 7,454 rows 6 columns: id Unique ID CNV chr Chromosome CNV start CNV start location end CNV end location flanking.start Start location region flanking CNV flanking.end End location region flanking CNV","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/hg19_blacklist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Germline Copy Number Variants Blacklist Data Version hg19 — hg19_blacklist","text":"ftp://ftp.broadinstitute.org/pub/GISTIC2.0/hg19_support/CNV.hg19.bypos.111213.txt","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/hg38_blacklist.html","id":null,"dir":"Reference","previous_headings":"","what":"Germline Copy Number Variants Blacklist Data Version hg38 — hg38_blacklist","title":"Germline Copy Number Variants Blacklist Data Version hg38 — hg38_blacklist","text":"updated CNV blacklist, used GISTIC, derived SNP6 array analysis Cancer Gene Census loci removed","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/hg38_blacklist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Germline Copy Number Variants Blacklist Data Version hg38 — hg38_blacklist","text":"","code":"hg38_blacklist"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/hg38_blacklist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Germline Copy Number Variants Blacklist Data Version hg38 — hg38_blacklist","text":"data frame 7,285 rows 6 columns: id Unique ID CNV chr Chromosome CNV start CNV start location end CNV end location flanking.start Start location region flanking CNV flanking.end End location region flanking CNV","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/hg38_blacklist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Germline Copy Number Variants Blacklist Data Version hg38 — hg38_blacklist","text":"https://github.com/beroukhim-lab/gistic_reference/tree/main","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/linear_transformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply linear transformation to male chromosome X and Y signals — linear_transformation","title":"Apply linear transformation to male chromosome X and Y signals — linear_transformation","text":"Applies linear transformation male normal sample chromosome X Y signals. Also applies linear transformation male tumor sample chromosome X signals.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/linear_transformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply linear transformation to male chromosome X and Y signals — linear_transformation","text":"","code":"linear_transformation(sif, n.df, t.df)"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/linear_transformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply linear transformation to male chromosome X and Y signals — linear_transformation","text":"sif Tibble data.frame containing sample metadata. n.df Tibble data.frame containing normal signal matrix. Rownames locus names format \"{chr}:{start}-{end}\" {chr} 1-22, X, Y {start} {end} genomic coordinates t.df Tibble data.frame containing tumor signal matrix. Rownames match n.df.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/linear_transformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply linear transformation to male chromosome X and Y signals — linear_transformation","text":"list two data frames, locus column: n.df: Normal signal matrix male chromosome X Y signals linearly transformed t.df: Tumor signal matrix male chromosome X signals linearly transformed","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_latent_factor_importance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot importance of latent factors — plot_latent_factor_importance","title":"Plot importance of latent factors — plot_latent_factor_importance","text":"Plot importance latent factors","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_latent_factor_importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot importance of latent factors — plot_latent_factor_importance","text":"","code":"plot_latent_factor_importance(sif_df, nsig_df, tsig_df, output_dir = NULL)"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_latent_factor_importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot importance of latent factors — plot_latent_factor_importance","text":"sif_df Tibble filepath text file containing sample metadata nsig_df Tibble filepath text file containing normal signal matrix tsig_df Tibble filepath text file containing tumor signal matrix output_dir Directory save plots. NULL, plots printed screen.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_latent_factor_importance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot importance of latent factors — plot_latent_factor_importance","text":"(Invisibly) list ggplot objects. Component contains plot latent factors. Component top_100 contains plot top 100 latent factors (least 100 latent factors).","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_latent_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot importance of latent factors — plot_latent_factors","title":"Plot importance of latent factors — plot_latent_factors","text":"Plot singular values visualize importance latent factors","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_latent_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot importance of latent factors — plot_latent_factors","text":"","code":"plot_latent_factors(n.autox.svd, output_dir = NULL)"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_latent_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot importance of latent factors — plot_latent_factors","text":"n.autox.svd list containing SVD components (output run_svd)","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_latent_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot importance of latent factors — plot_latent_factors","text":"list containing ggplot objects. output_dir specified, plots also saved .jpg files specified directory.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_signal_along_loci.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot signal along genome before and after TangentXY normalization — plot_signal_along_loci","title":"Plot signal along genome before and after TangentXY normalization — plot_signal_along_loci","text":"Plot signal along genome TangentXY normalization","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_signal_along_loci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot signal along genome before and after TangentXY normalization — plot_signal_along_loci","text":"","code":"plot_signal_along_loci(   tnorm,   sample_id,   pif_df,   tsig_df,   n_latent,   output_dir = NULL )"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_signal_along_loci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot signal along genome before and after TangentXY normalization — plot_signal_along_loci","text":"tnorm normalized tumor signal matrix output run_tangent, list matrices. sample_id Sample ID plot pif_df Tibble filepath text file containing probe information. 'chr' column chromosome names (1-22, X, Y) 'arm' column arm names (p q) tsig_df Tibble filepath text file containing tumor signal matrix n_latent numeric vector numbers latent factors used TangentXY normalization. correspond elements tnorm. output_dir Directory save plot. NULL, plot printed screen.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_signal_along_loci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot signal along genome before and after TangentXY normalization — plot_signal_along_loci","text":"(Invisibly) ggplot object containing signal profiles sample normalization.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_signal_along_loci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot signal along genome before and after TangentXY normalization — plot_signal_along_loci","text":"","code":"n_latent <- c(5, 10) tangent_res <- lapply(n_latent, function(nlf) {   run_tangent(example_sif, example_nsig_df, example_tsig_df, nlf, make_plots = FALSE) }) #>  #> Applying linear transformation ... #>  #> Running SVD ... #>  #> Running Tangent on autosomes and chrX ... #> Done. #>  #> Running Tangent on male chrY ... #> Done. #>  #> Applying linear transformation ... #>  #> Running SVD ... #>  #> Running Tangent on autosomes and chrX ... #> Done. #>  #> Running Tangent on male chrY ... #> Done. plot_signal_along_loci(tangent_res, \"tumor.female2\", example_pif,                        example_tsig_df, n_latent = n_latent)"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_signal_noise.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot signal and noise before and after TangentXY normalization — plot_signal_noise","title":"Plot signal and noise before and after TangentXY normalization — plot_signal_noise","text":"function calculates plots signal noise profiles tumor samples TangentXY normalization varying numbers latent factors. signal defined standard deviation median signal chromosome arm (grouped autosomes, X, Y chromosomes), noise defined median absolute values vector consecutive differences signal.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_signal_noise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot signal and noise before and after TangentXY normalization — plot_signal_noise","text":"","code":"plot_signal_noise(   tnorm,   sif_df,   pif_df,   tsig_df,   n_latent,   output_dir = NULL,   n_cores = 1 )"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_signal_noise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot signal and noise before and after TangentXY normalization — plot_signal_noise","text":"tnorm normalized tumor signal matrix output run_tangent, list matrices. sif_df Tibble filepath text file containing sample metadata pif_df Tibble filepath text file containing probe information. 'chr' column chromosome names (1-22, X, Y) 'arm' column arm names (p q). also 'locus' column locus names format \"{chr}:{start}-{end}\" {chr} 1-22, X, Y {start} {end} genomic coordinates. tsig_df Tibble filepath text file containing tumor signal matrix n_latent numeric vector numbers latent factors used TangentXY normalization. correspond elements tnorm. output_dir Directory save plot. NULL, plot printed screen. n_cores Number cores use parallel processing.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_signal_noise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot signal and noise before and after TangentXY normalization — plot_signal_noise","text":"(Invisibly) tibble containing signal noise profiles sample normalization.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_signal_noise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot signal and noise before and after TangentXY normalization — plot_signal_noise","text":"","code":"n_latent <- c(5, 10) tangent_res <- lapply(n_latent, function(nlf) {  run_tangent(example_sif, example_nsig_df, example_tsig_df, nlf, make_plots = FALSE) }) #>  #> Applying linear transformation ... #>  #> Running SVD ... #>  #> Running Tangent on autosomes and chrX ... #> Done. #>  #> Running Tangent on male chrY ... #> Done. #>  #> Applying linear transformation ... #>  #> Running SVD ... #>  #> Running Tangent on autosomes and chrX ... #> Done. #>  #> Running Tangent on male chrY ... #> Done. res <- plot_signal_noise(tangent_res, example_sif, example_pif,                          example_tsig_df, n_latent = n_latent) #> Calculating signal and noise in pre-normalization data... #> Calculating signal and noise in normalized data with 5 latent factors... #> Calculating signal and noise in normalized data with 10 latent factors... #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_x_and_y_signal_transformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Chromosome X and Y signals before and after linear transformation — plot_x_and_y_signal_transformation","title":"Plot Chromosome X and Y signals before and after linear transformation — plot_x_and_y_signal_transformation","text":"Plot Chromosome X Y signals linear transformation","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_x_and_y_signal_transformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Chromosome X and Y signals before and after linear transformation — plot_x_and_y_signal_transformation","text":"","code":"plot_x_and_y_signal_transformation(   sif,   n.df,   t.df,   n.df.transformed,   t.df.transformed,   output_dir = NULL )"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_x_and_y_signal_transformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Chromosome X and Y signals before and after linear transformation — plot_x_and_y_signal_transformation","text":"sif Tibble data.frame containing sample metadata. n.df Tibble data.frame containing normal signal matrix. Rownames locus names format \"{chr}:{start}-{end}\" {chr} 1-22, X, Y {start} {end} genomic coordinates t.df Tibble data.frame containing tumor signal matrix. Rownames match n.df. n.df.transformed Tibble data.frame containing normal signal matrix linear transformation. Output linear_transformation. t.df.transformed Tibble data.frame containing tumor signal matrix linear transformation. Output linear_transformation. output_dir Directory save plots. NULL, plots printed screen.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/plot_x_and_y_signal_transformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Chromosome X and Y signals before and after linear transformation — plot_x_and_y_signal_transformation","text":"Nothing. Generates saves prints plots.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/read_and_format_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in a data frame or filepath with a locus column and arrange it in order of increasing genomic position (1-22, X, Y; within each chromosome, by start position). — read_and_format_input","title":"Read in a data frame or filepath with a locus column and arrange it in order of increasing genomic position (1-22, X, Y; within each chromosome, by start position). — read_and_format_input","text":"Read data frame filepath locus column arrange order increasing genomic position (1-22, X, Y; within chromosome, start position).","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/read_and_format_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in a data frame or filepath with a locus column and arrange it in order of increasing genomic position (1-22, X, Y; within each chromosome, by start position). — read_and_format_input","text":"","code":"read_and_format_input(input, locus_to_rownames = FALSE)"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/read_and_format_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in a data frame or filepath with a locus column and arrange it in order of increasing genomic position (1-22, X, Y; within each chromosome, by start position). — read_and_format_input","text":"input tibble filepath text file containing data. Must locus column format \"{chr}:{start}-{end}\" {chr} 1-22, X, Y {start} {end} genomic coordinates. locus_to_rownames TRUE, locus column converted rownames.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/read_and_format_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in a data frame or filepath with a locus column and arrange it in order of increasing genomic position (1-22, X, Y; within each chromosome, by start position). — read_and_format_input","text":"Input data frame arranged genomic position","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_cbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Run CBS segmentation on normalized tumor signals — run_cbs","title":"Run CBS segmentation on normalized tumor signals — run_cbs","text":"Run CBS segmentation normalized tumor signals","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_cbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run CBS segmentation on normalized tumor signals — run_cbs","text":"","code":"run_cbs(tnorm_df, alpha = 0.005, min_width = 3, n_cores = 1)"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_cbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run CBS segmentation on normalized tumor signals — run_cbs","text":"tnorm_df Normalized tumor signal run_tangent. alpha Passed segment. min_width Passed segment. n_cores Number cores use parallel processing.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_cbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run CBS segmentation on normalized tumor signals — run_cbs","text":"named list outputs CBS algorithm. element corresponds sample.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_pseudotangent.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the PseudoTangentXY algorithm — run_pseudotangent","title":"Run the PseudoTangentXY algorithm — run_pseudotangent","text":"Pseudotangent also isolates tumor signals using Tangent algorithm, used set normals particularly non-representative.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_pseudotangent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the PseudoTangentXY algorithm — run_pseudotangent","text":"","code":"run_pseudotangent(   sif_df,   nsig_df,   tsig_df,   n_latent_init,   num_partitions,   n_latent_part,   cbs_a = 0.005,   cbs_mw = 3,   cbs_ncores = 1,   partition_seed = 37,   make_plots = FALSE,   output_dir = NULL )"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_pseudotangent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the PseudoTangentXY algorithm — run_pseudotangent","text":"sif_df Tibble filepath text file containing sample metadata nsig_df Tibble filepath text file containing normal signal matrix tsig_df Tibble filepath text file containing tumor signal matrix n_latent_init number latent factors reconstruct initial normal subspace num_partitions number partitions create pseudotangent pipeline. must less number tumors n_latent_part number latent factors partition runs. exceed minimum number normal/pseudonormal samples across partitions. cbs_a alpha parameter function run_cbs cbs_mw minimum width parameter function run_cbs cbs_ncores number cores use function run_cbs partition_seed seed set reproducibility random partitioning make_plots TRUE, generate plots latent factor importance effects linear transformation output_dir Directory save plots. NULL, plots printed screen.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_pseudotangent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the PseudoTangentXY algorithm — run_pseudotangent","text":"normalized tumor signal matrix","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_svd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate SVD of linearly transformed normal signal matrix — run_svd","title":"Calculate SVD of linearly transformed normal signal matrix — run_svd","text":"Calculate singular value decomposition (SVD) linearly transformed normal signal matrix preparation input Tangent algorithm.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_svd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate SVD of linearly transformed normal signal matrix — run_svd","text":"","code":"run_svd(nt.df)"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_svd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate SVD of linearly transformed normal signal matrix — run_svd","text":"nt.df data frame containing linearly transformed normal signal matrix (output linear_transformation)","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_svd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate SVD of linearly transformed normal signal matrix — run_svd","text":"list containing SVD components","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_tangent.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the TangentXY algorithm — run_tangent","title":"Run the TangentXY algorithm — run_tangent","text":"Isolate tumor signal removing systematic noise using set normal samples.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_tangent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the TangentXY algorithm — run_tangent","text":"","code":"run_tangent(   sif_df,   nsig_df,   tsig_df,   n_latent,   make_plots = TRUE,   output_dir = NULL )"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_tangent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the TangentXY algorithm — run_tangent","text":"sif_df Tibble filepath text file containing sample metadata nsig_df Tibble filepath text file containing normal signal matrix tsig_df Tibble filepath text file containing tumor signal matrix n_latent Number latent factors reconstruct normal subspace make_plots TRUE, generate plots latent factor importance effects linear transformation output_dir Directory save plots. NULL, plots printed screen.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_tangent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the TangentXY algorithm — run_tangent","text":"normalized tumor signal matrix","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/run_tangent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the TangentXY algorithm — run_tangent","text":"","code":"res <- run_tangent(example_sif, example_nsig_df, example_tsig_df, 5) #>  #> Applying linear transformation ...   #>  #> Running SVD ...  #>  #> Running Tangent on autosomes and chrX ... #> Done. #>  #> Running Tangent on male chrY ... #> Done. head(res) #>         locus tumor.female1 tumor.female2 tumor.female3 tumor.female4 #> 1     1:1-100    -1.2207454  -0.559055711  -0.299517432   -0.28416243 #> 2   1:501-600    -0.6935373   0.243068129  -0.058697541    0.33545418 #> 3 1:1001-1100    -1.2577582   0.247067958   0.007995746    0.38298884 #> 4 1:1501-1600    -0.7668358   0.069592242  -0.073116565    0.17802465 #> 5 1:2001-2100    -0.6443380   0.038542539  -0.088375329    0.18877316 #> 6 1:2501-2600    -0.8606140   0.007977117  -0.016124108   -0.02767328 #>   tumor.female5 tumor.male1 tumor.male2 tumor.male3  tumor.male4 tumor.male5 #> 1   0.113159726  0.53400373  0.22644206 -0.28089146 -0.109757605 -0.37694414 #> 2   0.169757218  0.03113847 -0.25177090  0.28867239 -0.052538095  0.26051191 #> 3  -0.057496259  0.12303867  0.31443193  0.06375461 -0.036210615  0.17367268 #> 4   0.121745948  0.05207100  0.05443208 -0.11708422 -0.104412773  0.17846010 #> 5   0.304135800  0.07381542 -0.17230641  0.42254227 -0.143297414 -0.09760822 #> 6   0.004180603 -0.03501344 -0.11574397 -0.07468204 -0.001779737  0.13265353"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/sample.cbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Run CBS segmentation on a single sample — sample.cbs","title":"Run CBS segmentation on a single sample — sample.cbs","text":"Uses start position probe location.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/sample.cbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run CBS segmentation on a single sample — sample.cbs","text":"","code":"sample.cbs(sample, alpha, min.width)"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/save_segmentation.html","id":null,"dir":"Reference","previous_headings":"","what":"Save segmentation file — save_segmentation","title":"Save segmentation file — save_segmentation","text":"Save sample's segmentation file tab-delimited text file.","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/save_segmentation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save segmentation file — save_segmentation","text":"","code":"save_segmentation(seg_list, output_dir, filenames = NULL)"},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/save_segmentation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save segmentation file — save_segmentation","text":"seg_list output run_cbs, .e. list DNAcopy objects output_dir Directory segmentation files saved filenames character vector names save sample . length order seg_list","code":""},{"path":"https://beroukhim-lab.github.io/RtangentXY/reference/save_segmentation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save segmentation file — save_segmentation","text":"1 file successfully saved","code":""}]
