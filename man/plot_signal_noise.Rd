% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_signal_noise.R
\name{plot_signal_noise}
\alias{plot_signal_noise}
\title{Plot signal and noise before and after TangentXY normalization}
\usage{
plot_signal_noise(
  tnorm,
  sif_df,
  pif_df,
  tsig_df,
  n_latent,
  output_dir = NULL,
  n_cores = 1
)
}
\arguments{
\item{tnorm}{A normalized tumor signal matrix output by \link{run_tangent}, or a list of such matrices.}

\item{sif_df}{Tibble or filepath to a text file containing sample metadata}

\item{pif_df}{Tibble or filepath to a text file containing probe information.
Should have a 'chr' column with chromosome names (1-22, X, Y) and an 'arm' column with arm names (p or q).
Should also have a 'locus' column with locus names in the format \code{"{chr}:{start}-{end}"} where \code{{chr}} is 1-22, X, or Y
and where \code{{start}} and \code{{end}} are genomic coordinates.}

\item{tsig_df}{Tibble or filepath to a text file containing the tumor signal matrix}

\item{n_latent}{A numeric vector of the numbers of latent factors used in TangentXY normalization.
Should correspond to the elements in \code{tnorm}.}

\item{output_dir}{Directory to save the plot. If \code{NULL}, the plot will be printed to the screen.}

\item{n_cores}{Number of cores to use for parallel processing.}
}
\value{
(Invisibly) A tibble containing the signal and noise profiles for each sample before and after normalization.
}
\description{
This function calculates and plots the signal and noise profiles of tumor samples before and
after TangentXY normalization with varying numbers of latent factors. The signal is defined
as the standard deviation of the median signal of each chromosome arm (grouped into autosomes, X, and Y chromosomes),
and the noise is defined as the median of the absolute values of the vector of
consecutive differences between each signal.
}
\examples{
n_latent <- c(5, 10)
tangent_res <- lapply(n_latent, function(nlf) {
 run_tangent(example_sif, example_nsig_df, example_tsig_df, nlf, make_plots = FALSE)
})
res <- plot_signal_noise(tangent_res, example_sif, example_pif,
                         example_tsig_df, n_latent = n_latent)

}
